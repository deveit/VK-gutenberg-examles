"use strict";function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_unsupportedIterableToArray(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(i="Object"===i&&e.constructor?e.constructor.name:i)||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,o=new Array(t);i<t;i++)o[i]=e[i];return o}function _iterableToArrayLimit(e,t){var i=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=i){var o,n,s=[],r=!0,a=!1;try{for(i=i.call(e);!(r=(o=i.next()).done)&&(s.push(o.value),!t||s.length!==t);r=!0);}catch(e){a=!0,n=e}finally{try{r||null==i.return||i.return()}finally{if(a)throw n}}return s}}function _arrayWithHoles(e){if(Array.isArray(e))return e}function asyncGeneratorStep(e,t,i,o,n,s,r){try{var a=e[s](r),l=a.value}catch(e){return void i(e)}a.done?t(l):Promise.resolve(l).then(o,n)}function _asyncToGenerator(a){return function(){var e=this,r=arguments;return new Promise(function(t,i){var o=a.apply(e,r);function n(e){asyncGeneratorStep(o,t,i,n,s,"next",e)}function s(e){asyncGeneratorStep(o,t,i,n,s,"throw",e)}n(void 0)})}}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}!function o(n,s,r){function a(i,e){if(!s[i]){if(!n[i]){var t="function"==typeof require&&require;if(!e&&t)return t(i,!0);if(l)return l(i,!0);throw new Error("Cannot find module '"+i+"'")}t=s[i]={exports:{}};n[i][0].call(t.exports,function(e){var t=n[i][1][e];return a(t||e)},t,t.exports,o,n,s,r)}return s[i].exports}for(var l="function"==typeof require&&require,e=0;e<r.length;e++)a(r[e]);return a}({1:[function(e,t,i){var n,o,s,r,a,l;n=jQuery,o={vimeo:{muted:!1,loop:!0,autoplay:!1,controls:!1},inputs:{progressInput:"#setTime",volumeInput:".volume"},ui:{progress:".currentPlay",volume:".volumeProg",currentTime:".status",totalTime:".total-time",sound:".speaker .sound",mute:".speaker .mute",play:".play",videoCover:".video-cover-image",pause:".pause"}},s=jQuery(window),r=jQuery(".mobile-cover-video"),a=jQuery(".back-link"),l=function(){function o(e){var t=this,i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};_classCallCheck(this,o),_defineProperty(this,"id",void 0),_defineProperty(this,"options",{}),_defineProperty(this,"progressMousedown",!1),_defineProperty(this,"$mobileBgVideo",void 0),_defineProperty(this,"player",void 0),_defineProperty(this,"duration",void 0),_defineProperty(this,"currentTime",void 0),_defineProperty(this,"volume",.75),_defineProperty(this,"$window",void 0),"string"==typeof e&&"object"===_typeof(i)&&n("#".concat(e)).length&&(this.id=e,this.options=i,this.$window=s,this.$mobileBgVideo=r,this.$backLink=a,this.isMobile()&&(this.options.vimeo.autoplay=!1),this.events(),this.initPlayer().then(function(){t.playerEvents(),t.changeVolume(t.options.vimeo.muted?0:t.volume)}),this.maybePauseMobileBgVideo())}var e,t;return _createClass(o,[{key:"initPlayer",value:(t=_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.player=new Vimeo.Player(this.id,this.options.vimeo),e.next=3,this.defineDuration();case 3:case"end":return e.stop()}},e,this)})),function(){return t.apply(this,arguments)})},{key:"defineDuration",value:(e=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.player.getDuration();case 2:this.duration=e.sent,n(this.options.inputs.progressInput+", "+this.options.ui.progress).attr("max",this.duration),n(this.options.ui.totalTime).text(function(){return t.toHHMMSS(t.duration)});case 5:case"end":return e.stop()}},e,this)})),function(){return e.apply(this,arguments)})},{key:"events",value:function(){this.$backLink.on("click",function(){sessionStorage.setItem("returned-from-single-video",!0)})}},{key:"playerEvents",value:function(){var t=this;this.player.on("loaded",function(){t.updateProgress(0),t.options.vimeo.autoplay||t.showPlayButton(),t.options.vimeo.autoplay&&t.showPauseButton()}),n(this.options.inputs.progressInput).on("mousedown",function(){t.progressMousedown=!0}).on("mouseup",function(){t.progressMousedown=!1}).change(function(e){e=n(e.currentTarget).val();t.player.setCurrentTime(e),t.updateProgress(e)}),n(this.options.inputs.volumeInput).on("input change",function(e){t.changeVolume(n(e.currentTarget).val())}),this.player.on("timeupdate",function(e){t.progressMousedown||t.updateProgress(e.seconds)}),this.player.on("volumechange",function(e){return t.updateVolume(e.volume)}),n(this.options.ui.sound).click(function(){return t.soundOff()}),n(this.options.ui.mute).click(function(){return t.soundOn()}),this.player.on("play",this.showPauseButton.bind(this)),n(this.options.ui.play).click(this.play.bind(this)),this.player.on("pause",this.showPlayButton.bind(this)),n(this.options.ui.pause).click(this.pause.bind(this)),this.$window.on("resize",function(){t.isMobile()&&t.pause(),t.maybePauseMobileBgVideo()}),this.player.on("play",function(){return n(t.options.ui.videoCover).hide()}),this.$window.on("keydown",function(e){32===e.originalEvent.keyCode&&t.player.getPaused().then(function(e){e?t.play():t.pause()})})}},{key:"play",value:function(){this.player.play()}},{key:"pause",value:function(){this.player.pause()}},{key:"showPauseButton",value:function(){n(this.options.ui.play).hide(),n(this.options.ui.pause).show()}},{key:"showPlayButton",value:function(){n(this.options.ui.play).show(),n(this.options.ui.pause).hide()}},{key:"soundOn",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:.5;this.player.setVolume(e),n(this.options.ui.sound).show(),n(this.options.ui.mute).hide(),n(this.options.inputs.volumeInput+", "+this.options.ui.volume).val(e)}},{key:"soundOff",value:function(){this.player.setVolume(0),n(this.options.ui.sound).show(),n(this.options.ui.mute).hide(),n(this.options.inputs.volumeInput+", "+this.options.ui.volume).val(0)}},{key:"changeVolume",value:function(e){this.player.setVolume(e)}},{key:"updateVolume",value:function(e){this.volume=e,n(this.options.ui.volume+", "+this.options.inputs.volumeInput).val(e)}},{key:"updateProgress",value:function(e){this.currentTime=e,n(this.options.inputs.progressInput+", "+this.options.ui.progress).val(e),n(this.options.ui.currentTime).text(this.toHHMMSS(Math.round(e)))}},{key:"toHHMMSS",value:function(e){e=parseInt(e,10);return[Math.floor(e/3600),Math.floor(e/60)%60,e%60].map(function(e){return e<10?"0"+e:e}).filter(function(e,t){return"00"!==e||0<t}).join(":")}},{key:"isMobile",value:function(){return this.$window.width()<768}},{key:"maybePauseMobileBgVideo",value:function(){this.$mobileBgVideo.length&&(this.isMobile()?this.$mobileBgVideo[0].play():this.$mobileBgVideo[0].pause())}}]),o}(),n(document).ready(function(){return new l("vimeo",o)})},{}],2:[function(e,t,i){var s,o;s=jQuery,o=function(){function t(e){_classCallCheck(this,t),this.$section=e,this.$window=s(window),this.$stickyToggle=this.$section.find(".video-category-filter-list-sticky-toggle"),this.$stickyFilterList=this.$section.find(".video-category-filter-list-sticky"),this.$topFiltersList=this.$section.find(".video-category-filter-list").first(),this.$filters=this.$section.find(".video-filter"),s(document).ready(this.maybeSelectFilter.bind(this)),this.$window.on("load scroll",this.maybeScroll.bind(this)),this.$stickyToggle.on("click",this.toggleOnClick.bind(this)),this.$section.on("ajax-loaded",this.refreshOffset.bind(this)),this.$window.on("load scroll resize",this.windowOnChange.bind(this)),this.$window.on("resize",this.refreshOffset.bind(this)),this.$filters.on("click",this.filtersOnClick.bind(this)),this.refreshOffset()}return _createClass(t,[{key:"refreshOffset",value:function(){this.topOffset=this.$topFiltersList.offset().top,this.bottomOffset=this.$section.offset().top+this.$section.height()+160}},{key:"toggleOnClick",value:function(){this.$stickyFilterList.hasClass("video-category-filter-list-sticky--visible")?(this.hideFilters(),this.windowOnChange()):this.showFilters()}},{key:"windowOnChange",value:function(){var e=this.$window.scrollTop(),t=e+this.$window.height();if(767<this.$window.width())return this.hideToggle(),void this.hideFilters();e>this.topOffset&&t<this.bottomOffset?this.showToggle():(this.hideToggle(),this.hideFilters())}},{key:"filtersOnClick",value:function(e){e.preventDefault();var t=s(e.currentTarget).data("video-category-slug"),i=this.$section.find('[data-video-category-slug="'.concat(t,'"]')),o=this.$section.find(".ajax-reload-videos"),n=i.hasClass("active"),e=[];this.$filters.removeClass("active"),n||(i.addClass("active"),e.push(t)),sessionStorage.setItem("video-category-filter",JSON.stringify(e)),o.addClass("active"),s.ajax({url:the_ajax_script.ajaxurl,type:"post",data:{action:"filter_by_video_category",video:e},success:function(e){o.html(e),o.removeClass("active"),this.$section.trigger("ajax-loaded")}.bind(this)})}},{key:"maybeSelectFilter",value:function(){var e=Boolean(sessionStorage.getItem("returned-from-single-video")),t=sessionStorage.getItem("video-category-filter");sessionStorage.removeItem("video-category-filter"),e&&"string"==typeof t&&(t=JSON.parse(t)[0],this.$topFiltersList.find('[data-video-category-slug="'.concat(t,'"]')).click())}},{key:"maybeScroll",value:function(){Boolean(sessionStorage.getItem("returned-from-single-video"))&&this.$window.scrollTop(this.$section.offset().top),setTimeout(function(){return sessionStorage.removeItem("returned-from-single-video")},1e3)}},{key:"showFilters",value:function(){this.$stickyFilterList.addClass("video-category-filter-list-sticky--visible")}},{key:"hideFilters",value:function(){this.$stickyFilterList.removeClass("video-category-filter-list-sticky--visible")}},{key:"showToggle",value:function(){this.$stickyToggle.addClass("video-category-filter-list-sticky-toggle--visible")}},{key:"hideToggle",value:function(){this.$stickyToggle.removeClass("video-category-filter-list-sticky-toggle--visible")}}]),t}(),s(document).ready(function(){s(".video-list-section").each(function(){return new o(s(this))})})},{}],3:[function(e,t,i){e("./class-video-section"),e("./class-video-player"),function(r){function a(){var e=r(".hero-section .hero-video"),t=r(window).innerHeight(),i=r(".hero-section").outerHeight()-r(".hero-section").height(),o=r(".hero-section .light-frame").outerHeight()-r(".hero-section .light-frame").height(),n=r(".hero-section .custom-heading").height();e.css({height:t-i-o-(n+16)})}var e=!1;r(window).resize(function(){e=!0}),setInterval(function(){e&&(e=!1,a())},150);function l(){var e=r(".resize-img .hero-image"),t=r(window).height(),i=r(".resize-img").outerHeight()-r(".resize-img").height(),o=r(".resize-img .light-frame").outerHeight()-r(".resize-img .light-frame").height(),n=parseInt(r(".resize-img .custom-heading").css("marginBottom")),s=parseInt(r(".resize-img .custom-heading").css("marginTop")),s=t-i-o-r(".resize-img .custom-heading").height()-n-s;e.css({"max-height":s,height:s})}var t=!1;r(window).resize(function(){t=!0}),setInterval(function(){t&&(t=!1,l())},150);function u(){var e=r(".video-info .video-row"),t=r(".video-info .related-video").outerHeight(),i=r(".video-info .video-text").outerHeight(),i=Math.max(t,i);e.css({"min-height":i})}var i=!1;r(window).resize(function(){i=!0}),setInterval(function(){i&&(i=!1,u())},150);r(document).ready(function(){var e,t;a(),l(),u(),e=r(".height-100vh"),t=window.innerHeight,e.css({"min-height":t+"px"});var i=1,o=setInterval(s,500),n=r(".show-on-move");function s(){4==i&&(n.fadeOut(),i=1),i+=1}r(document).on("mousemove",function(){n.fadeIn(),i=1,clearInterval(o),o=setInterval(s,500)}),0<r("#file").length&&document.querySelector("#file").addEventListener("change",function(e){var t=_slicedToArray(e.target.files,1)[0],e=t.name,t=(t.size/1e3).toFixed(2),t="".concat(e," - ").concat(t,"KB");document.querySelector(".file-name").textContent=t}),r(".wpcf7-form select").selectric(),r("#nav-icon2").click(function(e){e.preventDefault(),r(this).toggleClass("open"),r(".top-bar").slideToggle()}),r(".menu-list-item").on("click",function(e){e.preventDefault();var t=r(this).data("id"),e=r("#list-item-text-id-"+t);r(".menu-list-item").not(this).removeClass("active"),r(this).hasClass("active")?r(this).removeClass("active"):r(this).toggleClass("active"),r(".list-item-text").not(e).hide(),r("#list-item-text-id-"+t).show()}),r(".show-related-video").click(function(e){e.preventDefault();var i=r(this).data("text-1"),o=r(this).data("text-2");r(this).text(function(e,t){return t===i?o:i}),r(".video-text").toggleClass("hidden"),r(".related-video").toggleClass("active")}),r(".mobile-show-video-info").click(function(e){e.preventDefault(),r(".mobile-show-related-video").removeClass("active"),r(this).addClass("active"),r(".video-text").slideDown(),r(".related-video").slideUp()}),r(".mobile-hide-video-info").click(function(e){e.preventDefault(),r(".video-text").slideUp(),r(".mobile-show-video-info").removeClass("active")}),r(document).on("mouseover",".video-list-item-content",function(e){e=r(e.currentTarget);e.find("video")[0].play(),e.find("img").stop().fadeOut()}).on("mouseleave",".video-list-item-content",function(e){e=r(e.currentTarget);e.find("video")[0].pause(),e.find("img").stop().fadeIn()}),r(document).on("click",".video-list-item-content",function(e){r(window).width()<768&&!r(this).hasClass("is-mobile-hovered")&&(e.preventDefault(),r(this).addClass("is-mobile-hovered"))}).on("blur",".video-list-item-content",function(){r(this).removeClass("is-mobile-hovered")}),r(".mobile-show-related-video").click(function(e){e.preventDefault(),r(".mobile-show-video-info").removeClass("active"),r(this).addClass("active"),r(".video-text").slideUp(),r(".related-video").slideDown().addClass("clearfix")}),r(".mobile-hide-related-video").click(function(e){e.preventDefault(),r(".related-video").slideUp(),r(".mobile-show-related-video").removeClass("active"),r(".mobile-show-related-video").removeClass("active")}),r('a[href*="#"]:not([data-fancybox]').click(function(e){var t=r(this).attr("href"),i=window.location.href,o=t.split("#").pop(),o=r("#"+o);"#"!=t&&o.length&&(t.split("#")[0]!=i.split("#")[0]&&0!=t.indexOf("#")||(e.preventDefault(),r("html, body").animate({scrollTop:o.offset().top},500)))}),0<r(".mobile-cover-video").length&&r(".play-for-mobile").on("click",function(){r(".mobile-cover-video")[0].pause()}),r("[data-fancybox]").fancybox({youtube:{showinfo:0},vimeo:{color:"f00"},afterClose:function(){0<r(".mobile-cover-video").length&&r(".mobile-cover-video")[0].play()}})}),r(window).on("load",function(){setTimeout(function(){r(".preloader").addClass("preloader--hidden")},1500)}),r(window).resize(function(){})}(jQuery)},{"./class-video-player":1,"./class-video-section":2}]},{},[3]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
